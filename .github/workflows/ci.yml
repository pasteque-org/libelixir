name: Elixir CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    runs-on: ubuntu-22.04
    env:
      MIX_ENV: test
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Elixir
      uses: erlef/setup-beam@v1
      with:
        version-file: .tool-versions
        version-type: strict

    - name: Cache deps
      id: cache-deps
      uses: actions/cache@v4
      env:
        cache-name: cache-elixir-deps
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ env.cache-name }}-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          ${{ runner.os }}-mix-${{ env.cache-name }}-

    - name: Cache compiled build
      id: cache-build
      uses: actions/cache@v4
      env:
        cache-name: cache-compiled-build
      with:
        path: _build
        key: ${{ runner.os }}-mix-${{ env.cache-name }}-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          ${{ runner.os }}-mix-${{ env.cache-name }}-
          ${{ runner.os }}-mix-

    - name: Restore PLT cache
      id: plt_cache
      uses: actions/cache/restore@v4
      with:
        key: |
          plt-${{ runner.os }}-${{ hashFiles('**/.tool-versions') }}-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          plt-${{ runner.os }}-${{ hashFiles('**/.tool-versions') }}-
        path: | 
          priv/plts

    - name: Clean to rule out incremental build as a source of flakiness
      if: github.run_attempt != '1'
      run: |
        mix deps.clean --all
        mix clean
      shell: sh

    - name: Install dependencies
      run: mix deps.get

    - name: Check retired deps
      run: mix hex.audit

    - name: Check unused dependencies
      run: mix deps.unlock --check-unused

    - name: Compiles without warnings
      run: mix compile --all-warnings --warnings-as-errors

    - name: Check Formatting
      run: mix format --dry-run --check-formatted 

    - name: Credo
      run: mix credo

    - name: Sobelow
      run: mix sobelow --config

    - name: Create PLTs
      if: steps.plt_cache.outputs.cache-hit != 'true'
      run: mix dialyzer --plt
      
    - name: Save PLT cache
      id: plt_cache_save
      uses: actions/cache/save@v4
      if: steps.plt_cache.outputs.cache-hit != 'true'
      with:
        key: |
          plt-${{ runner.os }}-${{ hashFiles('**/.tool-versions') }}-${{ hashFiles('**/mix.lock') }}
        path: |
          priv/plts

    - name: Run dialyzer
      run: mix dialyzer --format github
      # run: mix dialyzer --no-check --ignore-exit-status

    - name: Run tests
      run: mix test --trace
